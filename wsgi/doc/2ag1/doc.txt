協同產品設計實習專案(2ag1)
===

組員
------------------
40123101

40123102

40123132

OpenShift 網站: http://2014cdag1-cadp13ag6.rhcloud.com/

w8考試
------------------
1.  請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

 *  程式碼:
```python 
    for x in range(0,10):
        for y in range(0,10):
            print(x,'*',y,'=',x*y)
```

 *  解題過程:
 
    打完程式後，之後我把它上傳到bitbucket，git add .→ git commit -m "99"→ git push，之後為了要把99乘法表顯示在openshift CMSimply上，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app-root/runtime/repo/wsgi的application檔案下，之後進去openshift CMSimply的網站，就顯示99乘法表了。

 *  解題心得:
 
    雖然要打一個99乘法表的程式很快，但要如何顯示在遠端的網頁上，思考了很久，在課堂後請教了TA，最後應用cherrypy的方式，在application檔案，新增一個class 的格式，就完成了。
    
2. 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.

 *  Bitbucket 連結:
https://bitbucket.org/40123102/40123102cmsimply/src

 *  Vemeo 空間:
https://vimeo.com/user26935042/videos

 *  copy 空間:
https://copy.com/XohJLdUBRJdk
 *  dokuwiki網站:
https://40123102cdg1dokuwiki-cadp13ag6.rhcloud.com/doku.php?id=start

 *  CMSimply網址:
http://40123102cdg1-cadp13ag6.rhcloud.com/w8test/

3. 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

 *  解題過程:
 
    程式做不出來，只好一個一個建立。

 *  解題心得:
 
    想很久，還是無法想出程式，只好用最勤勞的方法，一個一個建立，唉!!!
    
w9考試
------------------
1. 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

 *  程式碼:
```python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
```

 *  解題過程:
 
    打完程式後，有顯示出來，但無法顯示表單在CMSimply網址上，只能一個一個慢慢打。

 *  解題心得:
 
    想了很久，還是無法，只會打程式，只好把顯示出來的數字一個一個加上，慢慢打。

2. 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.

 *  解題過程:
 
    打完程式後，之後我把它上傳到bitbucket，git add .→ git commit -m "w9_2"→ git push，之後為了要把99乘法表顯示在openshift CMSimply上，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app-root/runtime/repo/wsgi的application檔案下，之後進去openshift CMSimply的網站，輸入 9, 20, 則顯示 9×20 的乘法表.
    
 *  解題心得:
 
    這題跟上週小考差不多，只是還要再新增兩個輸入表單，所以還要在回想一下，但大致上ok，所以完成了。
    
3. 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

 *  程式碼:
```python
import hashlib
# convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
text='abc%03d'
for i in range(1,399+1):
    print(text%(i)+':'+gen_password(text%(i))+':'+text%(i)+'@gmail.com:'+text%(i)+'@gmail.com:'+'user')
```

 *  操作過程:
 
    先寫一個程式使他能產生帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料，之後連線到openshift dokuwiki的FileZilla，把產生出來的程式碼貼到app-root/data/conf/users.auth.php下，之後開啟dokuwiki網站即可。

 *  心得:
 
    一開始這個程式需要思考一下，如何使帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶，打出來後還要去讓所產生的程式碼符合一開始的格式，如同users.auth.php，思考很久最後終於成功了。
    
 w12
------------------

 *  第十二週任務:
 
1.  請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)
2.  請各組設法利用 CherryPy 與 Pro/Web.Link 技術, 在 Github 協同專案中建立一個能夠透過連結或表單控制 Cube 零件, a, b, 或 c 零件尺寸的網際協同程式, 讓使用者可以藉以利用近端的 Creo 嵌入式瀏覽器控制 Cube 的尺寸後列出該零件的體積大小. (佔期末成績 5分)

*  心得:
1.  在URL直接更改參數:在對應的程式內，把迴圈改成可在URL後面輸入變數，EX:http://127.0.0.1:8080/cdag1/cube1?w=20&h=20&l=20
2.  在更改FOR迴圈時切記{}! 在此DEF最下面還有一個括弧要刪除，否則會跑出CATCH

*  組員自評:

    40123101：85分
    
    40123102：95分
    
    40123132：95分
    
w13
------------------

 *  第十三週任務:

1.  請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

2.  請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

3.  請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

*  40123101心得:

任務1: 

1.  組立時如果使用自動選項，很容易出現組立不成功，譬如你需要重合時他可能會出現相切、距離...等，所以如果已知道自己想要甚麼選項時可先自己選擇。

2.  在組立時建議可將位置拉到你想要的位置附近，才不會有跑掉的狀況。

任務2:  

1.  Vemeo 空間: https://vimeo.com/95823817

2.  copy 空間: https://copy.com/z8hxVmer0fvE

*  40123102心得:

任務1:  

1.  先開啟creo，建立組立檔，依序叫出零件圖的身體、右手、左手、waist、右腳、左腳、頭、帽子，每叫出一個就把它們限制約束，軸和軸或平面和平面，即可完成組裝。

2.  要注意組立順序以及約束的條件。

任務2: 

1.  Vemeo 空間: http://vimeo.com/95836249

2.  copy 空間: https://copy.com/EOsEOAiVn9Vn

*  40123132心得:

任務1:  

1.  手動組樂高零組件，身體每個部位都要用不同關係組起來，有時候組完他角度還會跑掉，之後研究過程都覺得很有趣，大家都笑的很開心，雖然有點生氣。如果組立過程有錯誤或者是刪除的話數值會跑掉。

任務2:  

1.  Vemeo 空間: https://vimeo.com/upload

2.  copy 空間: https://copy.com/Lz78m2CKr8js

*  第1組心得:

任務3:

1.  lego_man 自動組立程式組出來零件的特徵 ID是按照順序組裝的(40~49)；但lego_parts_edu.7z 中下載相同名稱的 lego_man 零件的特徵 ID卻不是按照順序組裝，而是有跳號的現象，這表示他很有可能不是一次就組立起來，在組立過程中，可能有刪除某些零件之類的，已導致沒有按照順序組立。

2.  使用自動組立時較迅速也較準確，只需了解程式內容並修改，還有確認零件黨有放對地方即可。

w14
------------------

 *  第十四週任務:

1.  請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立. (5 分)

2.  請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中. (5 分)

3.  請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.(5 分)

*  40123101心得:

任務1: 

1.  這次有很多的零件參雜在一起，所以還要慢慢找檔案很麻煩，更可以理解使用程式的方便性。

任務2:  

1.  Vemeo 空間: https://vimeo.com/96605913

2.  copy 空間: 

*  40123102心得:

任務1:  

1.  比起上週的組立的檔案，這次麻煩許多，尤其在十字零件那地方，無法用軸和軸重合，只能面與面，一樣的方式要做好多次。

任務2: 

1.  Vemeo 空間: https://vimeo.com/96607709

2.  copy 空間: https://copy.com/hK1saWj3Ushr

*  40123132心得:

任務1:  

1.  這次手動組立比上次legoman零件還多一點， 可是比較簡單的是都是軸對齊， 只是零件多過程就只是一直重複軸對齊、面對面。

任務2:  

1.  Vemeo 空間: https://vimeo.com/96578684

2.  copy 空間: https://copy.com/QmbYuA8eynCs

*  第1組心得:

任務3:

1.  已做出來了，過程有點複雜，需要先想好哪個平面對哪個平面，基準面都要先訂好，這樣才能成功。

w15
------------------

 *  第十五週任務:

1.  請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.(5 分)

2.  請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中. (5 分)

3.  請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.(5 分)

*  40123101心得:

任務1: 

1.  這次因為零件少，所以組的很快，開始研究自動組立程式。

任務2:  

1.  Vemeo 空間: https://vimeo.com/97187853

2.  copy 空間: https://copy.com/3EYp3HvvrRdX

*  40123102心得:

任務1:  

1.  這次手動組立的檔案，已漸漸熟悉各個零件之間的組合約束，很快就組起來了。

任務2: 

1.  Vemeo 空間: https://vimeo.com/97188832

2.  copy 空間:  https://copy.com/d2svilSZt0TH

*  40123132心得:

任務1:  


任務2:  

1.  Vemeo 空間: 

2.  copy 空間: 

*  第1組心得:

任務3:

1.  還沒做出來，過程有點複雜，正在努力中......

w16
------------------

 *  第十六週任務:

     第十六, 十七與十八週的任務 (佔期末成績 45 分), 在讓各組根據教材三的架構做為導引, 建立一個類似 Teamproject 的雲端軟體套件.

 *  其中要點包含:

1.  協同產品設計為同步協同或非同步協同
2.  套件的架構為何(流程圖), 希望引入哪些技術(本課程教導了哪些協同技術?), 解決哪些問題, 提升哪些效能?
3.  完成後援此教材三的格式, 編寫一份套件簡介的報告(至多 5 頁)
4.  所完成的內容, 必須同步放入各組雲端網站, Github 協同專案, 以及各組的協同報告中.
5.  各組完成專案後, 必須按照時間在各週內進行組員自我評分(由各組組員自行評分), 以及各組自我評分(必須找其他三組進行交叉評分).

 *  目前已經具備的技術:

1.  在近端利用 Creo 繪製零件
2.  利用遠端 Pro/Web.Link 程式修改近端 Creo 零件尺寸
3.  將近端零件轉為 STL, 上傳至遠端 CMSimply 網站中檢視
4.  在近端利用手動組立零件
5.  在近端利用遠端網站上的 Pro/Web.Link 進行自動組立
6.  在近端與雲端建立 Dokuwiki 網站
7.  利用手動或半自動方式管理 Dokuwiki 的使用者
8.  在近端與雲端建立 CMSimply 網站
9.  利用 Github 與 Bitbucket 管理所有文字資料的版次
10.  利用近端 Leo Editor 與可攜程式系統管理所有資料
11.  利用近端環境產生 pdf 與 html 格式報告資料

w17
------------------

 *  第十七週任務:

    本週任務請參考第十六週任務規劃。

 *  課程教材:
1.  A collaborative writing approach to wikis
2.  Collabrative engine for distributed mechanical design
3.  Web-based collaborative engineering support system

 *  參考資料:
1.  gear_parts_creo.7z (參數化零件)
2.  gear_width_design_py3.7z (設計運算程式)

 *  雲端正齒輪減速機協同設計
 
     所需技術:
     
1.  Creo 參數式正齒輪零組件 (正齒輪, 傳動軸, 軸承, 叉銷, 齒輪箱)
2.  Creo 齒輪箱自動零件組立程式 (Pro/Web.Link)
3.  雲端減速機齒輪面寬設計程式
4.  CherryPy 雲端程式
5.  Python 3 資料庫查詢程式 (透過 Pybean)
6.  齒面寬設計運算程式 (程式查表與內差計算)
  
     操作流程:
    
1.  使用者準備好近端的 Creo 2.0 Pro/Web.Link 執行環境
2.  使用者以嵌入式瀏覽器連結至雲端正齒輪減速機協同設計頁面
3.  使用者根據所需的減速機設計需求選擇設計表單
4.  雲端程式根據使用者的選擇參數進行設計運算
5.  使用者根據設計運算結果, 準備好近端的設計零件
6.  使用者根據設計結果所提供的零件自動組立連結, 在近端完成所需的正齒輪減速機零件變更與自動組立

w18
------------------

 *  第十八週任務:
    
